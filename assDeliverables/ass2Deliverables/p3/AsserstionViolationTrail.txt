7 Car   67  1              
7 Car   33  else           
6 Car   67  1              
6 Car   33  else           
5 Car   67  1              
5 Car   33  else           
4 Car   67  1              
4 Car   33  else           
3 Car   67  1              
3 Car   24  pid<4          
2 Car   67  1              
2 Car   24  pid<4          
1 Car   67  1              
1 Car   24  pid<4          
0 Car   67  1              
0 Car   24  pid<4          
3 Car   25  downSem>0      
3 Car   25  downSem = (dow 
Process Statement          downSem    
3 Car   27  down==0        0          
3 Car   27  upSem>0        0          
3 Car   27  upSem = (upSem 0          
Process Statement          downSem    upSem      
3 Car   30  t = down       0          0          
Process Statement          Car(3):t   downSem    upSem      
3 Car   30  down = (t+1)   0          0          0          
Process Statement          Car(3):t   down       downSem    upSem      
3 Car   31  downSem = (dow 0          1          0          0          
3 Car   75  pid<4          0          1          1          0          
3 Car   75  inAlleyDown =  0          1          1          0          
Process Statement          Car(3):t   down       downSem    inAlleyDow upSem      
3 Car   79  assert(!((inAl 0          1          1          1          0          
3 Car   82  pid<4          0          1          1          1          0          
3 Car   82  inAlleyDown =  0          1          1          1          0          
3 Car   46  pid<4          0          1          1          0          0          
3 Car   47  t = down       0          1          1          0          0          
2 Car   25  downSem>0      1          1          1          0          0          
2 Car   25  downSem = (dow 1          1          1          0          0          
2 Car   28  else           1          1          0          0          0          
2 Car   28  1              1          1          0          0          0          
3 Car   47  down = (t-1)   1          1          0          0          0          
3 Car   49  down==0        1          0          0          0          0          
3 Car   49  upSem = (upSem 1          0          0          0          0          
3 Car   67  1              1          0          0          0          1          
3 Car   24  pid<4          1          0          0          0          1          
7 Car   34  upSem>0        1          0          0          0          1          
7 Car   34  upSem = (upSem 1          0          0          0          1          
7 Car   36  up==0          1          0          0          0          0          
2 Car   30  t = down       1          0          0          0          0          
Process Statement          Car(2):t   Car(3):t   down       downSem    inAlleyDow upSem      
2 Car   30  down = (t+1)   0          1          0          0          0          0          
2 Car   31  downSem = (dow 0          1          1          0          0          0          
7 Car   36  downSem>0      0          1          1          1          0          0          
7 Car   36  downSem = (dow 0          1          1          1          0          0          
7 Car   39  t = up         0          1          1          0          0          0          
Process Statement          Car(2):t   Car(3):t   Car(7):t   down       downSem    inAlleyDow upSem      
7 Car   39  up = (t+1)     0          1          0          1          0          0          0          
Process Statement          Car(2):t   Car(3):t   Car(7):t   down       downSem    inAlleyDow up         upSem      
7 Car   40  upSem = (upSem 0          1          0          1          0          0          1          0          
7 Car   76  else           0          1          0          1          0          0          1          1          
7 Car   76  inAlleyUp = (i 0          1          0          1          0          0          1          1          
Process Statement          Car(2):t   Car(3):t   Car(7):t   down       downSem    inAlleyDow inAlleyUp  up         upSem      
2 Car   75  pid<4          0          1          0          1          0          0          1          1          1          
2 Car   75  inAlleyDown =  0          1          0          1          0          0          1          1          1          
spin: Man2multi.pml:79, Error: assertion violated
spin: text of failed assertion: assert(!((inAlleyUp&&inAlleyDown)))
#processes: 8
 49:	proc  7 (Car) Man2multi.pml:79 (state 44)
 49:	proc  6 (Car) Man2multi.pml:34 (state 21)
 49:	proc  5 (Car) Man2multi.pml:34 (state 21)
 49:	proc  4 (Car) Man2multi.pml:34 (state 21)
 49:	proc  3 (Car) Man2multi.pml:25 (state 5)
 49:	proc  2 (Car) Man2multi.pml:79 (state 44)
 49:	proc  1 (Car) Man2multi.pml:25 (state 5)
 49:	proc  0 (Car) Man2multi.pml:25 (state 5)
8 processes created
Exit-Status 0
